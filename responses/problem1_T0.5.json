{
    "base_prompt": "Write a Python function to check if a number is prime.",
    "base_response": "Here is a Python function that checks if a number is prime:\n\n\n\nTo use this function, you can call it with a number as an argument. It will return `True` if the number is prime, and `False` otherwise.\n\nExample usage:",
    "base_code": "python\nprint(is_prime(7))    # Output: True\nprint(is_prime(10))   # Output: False\nprint(is_prime(17))   # Output: True\nprint(is_prime(",
    "variation_responses": {
        "Write a Python function to check if a number is prime of life .": {
            "description": "To determine if a number is prime of life, we need to check if the number is both prime and a palindrome. Here's a Python function that checks if a number is prime of life:\n\n\n\nYou can use the `is_prime_of_life()` function to check if a number",
            "code": "python\ndef is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\ndef is_prime_of_life(n):\n    return is_prime(n) and is_palindrome(n)"
        },
        "Can you tell me: Write a Python function to check if a number is prime.": {
            "description": "Certainly! Here's a Python function that checks if a number is prime:\n\n\n\nYou can use this function to check if a number is prime by calling it and passing the number as an argument. The function will return `True` if the number is prime, and `False` otherwise.",
            "code": "python\ndef is_prime(num):\n    # Numbers less than 2 are not prime\n    if num < 2:\n        return False\n\n    # Check for divisibility from 2 to the square root of the number\n    for i in range(2, int(num ** 0.5) + 1):\n        if num % i == 0:\n            return False\n\n    return True"
        },
        "Write a Python function to check if a number is prime.": {
            "description": "Here is a Python function that checks if a number is prime:\n\n\n\nTo use this function, you can call it with a number as an argument and it will return `True` if the number is prime, and `False` otherwise. For example:",
            "code": "python\nprint(is_prime(5))  # Output: True"
        }
    }
}
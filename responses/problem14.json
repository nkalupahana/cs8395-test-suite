{
    "base_prompt": "Create a Rust program to calculate the greatest common divisor (GCD) of two numbers.",
    "base_response": "Here's an example Rust program that calculates the greatest common divisor (GCD) of two numbers using Euclid's algorithm:",
    "base_code": "rust\nfn gcd(mut a: u32, mut b: u32) -> u32 {\n    while b != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    a\n}\n\nfn main() {\n    let num1: u32 = 72;\n    let num2: u32 = 48;\n\n    let result = gcd(num1, num2);\n\n    println!(\"The GCD of {} and {} is {}\", num1, num2, result);\n}",
    "variation_responses": {
        "Create a Rust program to calculate the greatest common divisor ( GCD ) of two numbers .": {
            "description": "Sure! Here's a Rust program that calculates the greatest common divisor (GCD) of two numbers using Euclid's algorithm:",
            "code": "rust\nfn gcd(a: i32, b: i32) -> i32 {\n    if b == 0 {\n        return a;\n    } else {\n        return gcd(b, a % b);\n    }\n}\n\nfn main() {\n    let num1 = 36;\n    let num2 = 48;\n    let result = gcd(num1, num2);\n\n    println!(\"The GCD of {} and {} is: {}\", num1, num2, result);\n}"
        },
        "Can you tell me: Create a Rust program to calculate the greatest common divisor (GCD) of two numbers.": {
            "description": "Sure! Here's a Rust program that calculates the greatest common divisor (GCD) of two numbers using Euclid's algorithm:\n\n```rust\nuse std::io;\n\nfn main() {\n    println!(\"Enter the first number:\");\n    let mut first_num = String::new();\n    io::stdin().read_line(&mut first_num).expect(\"Failed to read line\");\n    let first_num: u32 = first_num.trim().parse().expect(\"Please enter a valid number\");\n\n    println!(\"Enter the second number:\");\n    let mut second_num = String::new();\n    io::stdin().read_line(&mut second_num).expect(\"Failed to read line\");\n    let second_num: u32 = second_num.trim().parse().expect(\"",
            "code": null
        },
        "Create a Rust program to calculate the greatest common divisor (GCD) of two numbers.": {
            "description": "```rust\nuse std::io;\n\nfn main() {\n    // Read the input numbers from the user\n    println!(\"Enter the first number:\");\n    let mut num1 = String::new();\n    io::stdin()\n        .read_line(&mut num1)\n        .expect(\"Failed to read line\");\n\n    println!(\"Enter the second number:\");\n    let mut num2 = String::new();\n    io::stdin()\n        .read_line(&mut num2)\n        .expect(\"Failed to read line\");\n\n    // Parse the input numbers into integers\n    let num1: u64 = num1.trim().parse().expect(\"Invalid input\");\n    let num2: u64 = num2.trim().parse().expect(\"Invalid input",
            "code": null
        }
    }
}
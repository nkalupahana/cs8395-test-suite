{
    "base_prompt": "Develop a Swift function that returns the nth Fibonacci number.",
    "base_response": "Here is an example of a Swift function that returns the nth Fibonacci number:\n\n\n\nYou can call this function with any positive integer to get the respective Fibonacci number. For example:",
    "base_code": "swift\nlet",
    "variation_responses": {
        "Develop a Swift function that returns the nth Fibonacci number .": {
            "description": "Here's a Swift function that returns the nth Fibonacci number using recursion:\n\n\n\nAnd here's a Swift function that returns the nth Fibonacci number using iteration:",
            "code": "swift\nfunc fibonacciIterative(_ n: Int) -> Int {\n    if n <= 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        var a = 0\n        var b"
        },
        "Can you tell me: Develop a Swift function that returns the nth Fibonacci number.": {
            "description": "Sure! Here is a Swift function that returns the nth Fibonacci number:\n\n\n\nYou can use this function to find the nth Fibonacci number by passing the desired value of n as an argument. For example, `fibonacci(5)` will return the 5th Fibonacci number, which",
            "code": "swift\nfunc fibonacci(_ n: Int) -> Int {\n    if n <= 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        var a = 0\n        var b = 1\n        for _ in 2...n {\n            let temp = a + b\n            a = b\n            b = temp\n        }\n        return b\n    }\n}"
        },
        "Develop a Swift function that returns the nth Fibonacci number.": {
            "description": "Here's a Swift function to return the nth Fibonacci number:\n\n\n\nExample usage:\n\n\n\nThis function uses an efficient iterative approach",
            "code": "swift\nprint(fibonacci(0)) // 0\nprint(fibonacci(1)) // 1\nprint(fibonacci(5)) // 5\nprint(fibonacci(10)) // 55"
        }
    }
}
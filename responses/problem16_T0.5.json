{
    "base_prompt": "Write a Kotlin function that determines if a string is a valid IPv4 address.",
    "base_response": "Here's a Kotlin function that determines if a string is a valid IPv4 address:\n\n\n\nYou can use this function to check if a string is a valid",
    "base_code": "kotlin\nfun isValidIPv4(ip: String): Boolean {\n    val parts = ip.split(\".\")\n    \n    // Check if the IP address has exactly 4 parts\n    if (parts.size != 4) {\n        return false\n    }\n    \n    // Check if each part is a valid number between 0 and 255\n    for (part in parts) {\n        val num = part.toIntOrNull()\n        if (num == null || num < 0 || num > 255) {\n            return false\n        }\n    }\n    \n    return true\n}",
    "variation_responses": {
        "Write a Kotlin function that determines if a train is a valid IPv4 address .": {
            "description": "Here's a Kotlin function that determines if a given string is a valid IPv4 address:\n\n\n\nYou can use this function to check if a train is a",
            "code": "kotlin\nfun isValidIPv4Address(address: String): Boolean {\n    val parts = address.split(\".\")\n    \n    // Check if the address has exactly 4 parts\n    if (parts.size != 4) {\n        return false\n    }\n    \n    // Check if each part is a valid number between 0 and 255\n    for (part in parts) {\n        val num = part.toIntOrNull()\n        if (num == null || num < 0 || num > 255) {\n            return false\n        }\n    }\n    \n    return true\n}"
        },
        "Can you tell me: Write a Kotlin function that determines if a string is a valid IPv4 address.": {
            "description": "Sure! Here's a Kotlin function that determines if a string is a valid IPv4 address:",
            "code": "kotlin\nfun isValidIPv4Address(ipAddress: String): Boolean {\n    val parts = ipAddress.split(\".\")\n    \n    // Check if the IP address has exactly four parts\n    if (parts.size != 4) {\n        return false\n    }\n    \n    for (part in parts) {\n        try {\n            val number = part.toInt()\n            \n            // Check if each part is between 0 and 255\n            if (number < 0 || number > 255) {\n                return false\n            }\n            \n            // Check if leading zeros are present\n            if (part.length > 1 && part[0] =="
        },
        "Write a Kotlin function that determines if a string is a valid IPv4 address.": {
            "description": "Here is a Kotlin function that determines if a string is a valid IPv4 address:\n\n\n\nThis function takes a string `ip` as input and splits it into four parts using the dot separator. If the resulting array does not have exactly four parts, it immediately returns `false` since",
            "code": "kotlin\nfun isValidIPv4Address(ip: String): Boolean {\n    val parts = ip.split(\".\")\n    if (parts.size != 4) return false\n    \n    for (part in parts) {\n        val num = try {\n            part.toInt()\n        } catch (e: NumberFormatException) {\n            return false\n        }\n        \n        if (num !in 0..255) return false\n    }\n    \n    return true\n}"
        }
    }
}